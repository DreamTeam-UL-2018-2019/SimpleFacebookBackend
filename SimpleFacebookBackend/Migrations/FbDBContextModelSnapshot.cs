// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleFacebookBackend.Models;

namespace SimpleFacebookBackend.Migrations
{
    [DbContext(typeof(FbDBContext))]
    partial class FbDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleFacebookBackend.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUser1")
                        .HasColumnName("Id_user1");

                    b.Property<int>("IdUser2")
                        .HasColumnName("Id_user2");

                    b.HasKey("Id");

                    b.HasIndex("IdUser1");

                    b.HasIndex("IdUser2");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("File")
                        .IsUnicode(false);

                    b.Property<int?>("IdGroup")
                        .HasColumnName("Id_group");

                    b.Property<int?>("IdReceiver")
                        .HasColumnName("Id_receiver");

                    b.Property<int>("IdSender")
                        .HasColumnName("Id_sender");

                    b.Property<string>("Message1")
                        .HasColumnName("Message")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdReceiver");

                    b.HasIndex("IdSender");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Unread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMessage")
                        .HasColumnName("Id_message");

                    b.Property<int>("IdUser")
                        .HasColumnName("Id_user");

                    b.HasKey("Id");

                    b.HasIndex("IdMessage");

                    b.HasIndex("IdUser");

                    b.ToTable("Unread");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FIrst_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Last_name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdGroup")
                        .HasColumnName("Id_group");

                    b.Property<int>("IdUser")
                        .HasColumnName("Id_user");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdUser");

                    b.ToTable("User_group");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Friend", b =>
                {
                    b.HasOne("SimpleFacebookBackend.Models.User", "IdUser1Navigation")
                        .WithMany("FriendIdUser1Navigation")
                        .HasForeignKey("IdUser1")
                        .HasConstraintName("FK_Friend_User1");

                    b.HasOne("SimpleFacebookBackend.Models.User", "IdUser2Navigation")
                        .WithMany("FriendIdUser2Navigation")
                        .HasForeignKey("IdUser2")
                        .HasConstraintName("FK_Friend_User2");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Message", b =>
                {
                    b.HasOne("SimpleFacebookBackend.Models.Group", "IdGroupNavigation")
                        .WithMany("Message")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_Message_Group");

                    b.HasOne("SimpleFacebookBackend.Models.User", "IdReceiverNavigation")
                        .WithMany("MessageIdReceiverNavigation")
                        .HasForeignKey("IdReceiver")
                        .HasConstraintName("FK_Message_User2");

                    b.HasOne("SimpleFacebookBackend.Models.User", "IdSenderNavigation")
                        .WithMany("MessageIdSenderNavigation")
                        .HasForeignKey("IdSender")
                        .HasConstraintName("FK_Message_User1");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.Unread", b =>
                {
                    b.HasOne("SimpleFacebookBackend.Models.Message", "IdMessageNavigation")
                        .WithMany("Unread")
                        .HasForeignKey("IdMessage")
                        .HasConstraintName("FK_Unread_Message");

                    b.HasOne("SimpleFacebookBackend.Models.User", "IdUserNavigation")
                        .WithMany("Unread")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_Unread_User");
                });

            modelBuilder.Entity("SimpleFacebookBackend.Models.UserGroup", b =>
                {
                    b.HasOne("SimpleFacebookBackend.Models.Group", "IdGroupNavigation")
                        .WithMany("UserGroup")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_User_group_group");

                    b.HasOne("SimpleFacebookBackend.Models.User", "IdUserNavigation")
                        .WithMany("UserGroup")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_User_group_user");
                });
#pragma warning restore 612, 618
        }
    }
}
